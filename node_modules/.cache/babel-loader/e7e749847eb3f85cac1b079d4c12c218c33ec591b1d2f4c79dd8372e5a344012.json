{"ast":null,"code":"var _jsxFileName = \"C:\\\\robot-creator\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n`;\n_c = Container;\nconst RobotCanvas = styled.div`\n  width: 300px;\n  height: 400px;\n  margin: 2rem auto;\n  background-color: ${props => props.color};\n  border-radius: 10px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\n_c2 = RobotCanvas;\nconst Controls = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n  margin-top: 2rem;\n`;\n_c3 = Controls;\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: 5px;\n  background-color: #4CAF50;\n  color: white;\n  cursor: pointer;\n  font-size: 1rem;\n\n  &:hover {\n    background-color: #45a049;\n  }\n`;\n_c4 = Button;\nconst ColorPicker = styled.input`\n  margin: 1rem;\n`;\n_c5 = ColorPicker;\nconst App = () => {\n  _s();\n  const [robotParts, setRobotParts] = useState({\n    head: 1,\n    body: 1,\n    arms: 1,\n    legs: 1,\n    color: '#e0e0e0'\n  });\n  const updatePart = part => {\n    if (typeof robotParts[part] === 'number') {\n      setRobotParts(prev => ({\n        ...prev,\n        [part]: prev[part] % 3 + 1\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83E\\uDD16 Robot Creator Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RobotCanvas, {\n      color: robotParts.color,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head\",\n        children: [\"Head Style \", robotParts.head]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body\",\n        children: [\"Body Style \", robotParts.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arms\",\n        children: [\"Arms Style \", robotParts.arms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legs\",\n        children: [\"Legs Style \", robotParts.legs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n      type: \"color\",\n      value: robotParts.color,\n      onChange: e => setRobotParts(prev => ({\n        ...prev,\n        color: e.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updatePart('head'),\n        children: \"Change Head\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updatePart('body'),\n        children: \"Change Body\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updatePart('arms'),\n        children: \"Change Arms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updatePart('legs'),\n        children: \"Change Legs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        const randomPart = () => Math.floor(Math.random() * 3) + 1;\n        setRobotParts({\n          head: randomPart(),\n          body: randomPart(),\n          arms: randomPart(),\n          legs: randomPart(),\n          color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        });\n      },\n      children: \"Randomize Robot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aRhbtQGyC7+6p5HLLlkQhK/1Q1A=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RobotCanvas\");\n$RefreshReg$(_c3, \"Controls\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"ColorPicker\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","styled","jsxDEV","_jsxDEV","Container","div","_c","RobotCanvas","props","color","_c2","Controls","_c3","Button","button","_c4","ColorPicker","input","_c5","App","_s","robotParts","setRobotParts","head","body","arms","legs","updatePart","part","prev","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","value","onChange","e","target","onClick","randomPart","Math","floor","random","toString","_c6","$RefreshReg$"],"sources":["C:/robot-creator/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface RobotParts {\r\n  head: number;\r\n  body: number;\r\n  arms: number;\r\n  legs: number;\r\n  color: string;\r\n}\r\n\r\nconst Container = styled.div`\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst RobotCanvas = styled.div<{ color: string }>`\r\n  width: 300px;\r\n  height: 400px;\r\n  margin: 2rem auto;\r\n  background-color: ${props => props.color};\r\n  border-radius: 10px;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Controls = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 1rem;\r\n  margin-top: 2rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0.5rem 1rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n\r\n  &:hover {\r\n    background-color: #45a049;\r\n  }\r\n`;\r\n\r\nconst ColorPicker = styled.input`\r\n  margin: 1rem;\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  const [robotParts, setRobotParts] = useState<RobotParts>({\r\n    head: 1,\r\n    body: 1,\r\n    arms: 1,\r\n    legs: 1,\r\n    color: '#e0e0e0',\r\n  });\r\n\r\n  const updatePart = (part: keyof RobotParts) => {\r\n    if (typeof robotParts[part] === 'number') {\r\n      setRobotParts(prev => ({\r\n        ...prev,\r\n        [part]: (prev[part] as number % 3) + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>ðŸ¤– Robot Creator Machine</h1>\r\n      <RobotCanvas color={robotParts.color}>\r\n        <div className=\"head\">Head Style {robotParts.head}</div>\r\n        <div className=\"body\">Body Style {robotParts.body}</div>\r\n        <div className=\"arms\">Arms Style {robotParts.arms}</div>\r\n        <div className=\"legs\">Legs Style {robotParts.legs}</div>\r\n      </RobotCanvas>\r\n\r\n      <ColorPicker\r\n        type=\"color\"\r\n        value={robotParts.color}\r\n        onChange={(e) => setRobotParts(prev => ({ ...prev, color: e.target.value }))}\r\n      />\r\n\r\n      <Controls>\r\n        <Button onClick={() => updatePart('head')}>Change Head</Button>\r\n        <Button onClick={() => updatePart('body')}>Change Body</Button>\r\n        <Button onClick={() => updatePart('arms')}>Change Arms</Button>\r\n        <Button onClick={() => updatePart('legs')}>Change Legs</Button>\r\n      </Controls>\r\n\r\n      <Button onClick={() => {\r\n        const randomPart = () => Math.floor(Math.random() * 3) + 1;\r\n        setRobotParts({\r\n          head: randomPart(),\r\n          body: randomPart(),\r\n          arms: randomPart(),\r\n          legs: randomPart(),\r\n          color: `#${Math.floor(Math.random()*16777215).toString(16)}`,\r\n        });\r\n      }}>\r\n        Randomize Robot\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}