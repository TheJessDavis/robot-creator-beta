{"ast":null,"code":"var _jsxFileName = \"C:\\\\robot-creator\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, MainPanel, Header, RobotCanvas, ControlPanel, Button, ModuleStatus, ColorPicker, ToolsDecoration, LightBulbs } from './styles';\nimport Robot3D from './components/Robot3D';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [robotParts, setRobotParts] = useState({\n    head: 1,\n    body: 1,\n    arms: 1,\n    legs: 1,\n    color: '#4fc3f7'\n  });\n  const updatePart = part => {\n    if (typeof robotParts[part] === 'number') {\n      setRobotParts(prev => ({\n        ...prev,\n        [part]: prev[part] % 3 + 1\n      }));\n    }\n  };\n  const [completedModules, setCompletedModules] = useState(0);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(MainPanel, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"ROBO-BEERTENDER GARAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RobotCanvas, {\n        color: robotParts.color,\n        children: [/*#__PURE__*/_jsxDEV(ToolsDecoration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LightBulbs, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bulb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Robot3D, {\n          parts: robotParts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => updatePart('head'),\n          children: \"HEAD MODULE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => updatePart('body'),\n          children: \"CORE MODULE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => updatePart('arms'),\n          children: \"ARM SERVOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => updatePart('legs'),\n          children: \"LEG PISTONS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n        type: \"color\",\n        value: robotParts.color,\n        onChange: e => setRobotParts(prev => ({\n          ...prev,\n          color: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          const randomPart = () => Math.floor(Math.random() * 3) + 1;\n          setRobotParts({\n            head: randomPart(),\n            body: randomPart(),\n            arms: randomPart(),\n            legs: randomPart(),\n            color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n          });\n        },\n        children: \"RANDOMIZE CONFIGURATION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModuleStatus, {\n        children: [completedModules, \" / 7 MODULES COMPLETED\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cVC48RS2s6UazNmPdmDdX3UkVDk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","MainPanel","Header","RobotCanvas","ControlPanel","Button","ModuleStatus","ColorPicker","ToolsDecoration","LightBulbs","Robot3D","jsxDEV","_jsxDEV","App","_s","robotParts","setRobotParts","head","body","arms","legs","color","updatePart","part","prev","completedModules","setCompletedModules","children","fileName","_jsxFileName","lineNumber","columnNumber","className","parts","onClick","type","value","onChange","e","target","randomPart","Math","floor","random","toString","_c","$RefreshReg$"],"sources":["C:/robot-creator/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  MainPanel,\r\n  Header,\r\n  RobotCanvas,\r\n  ControlPanel,\r\n  Button,\r\n  ModuleStatus,\r\n  ColorPicker,\r\n  ToolsDecoration,\r\n  LightBulbs\r\n} from './styles';\r\nimport Robot3D from './components/Robot3D';\r\n\r\ninterface RobotParts {\r\n  head: number;\r\n  body: number;\r\n  arms: number;\r\n  legs: number;\r\n  color: string;\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  const [robotParts, setRobotParts] = useState<RobotParts>({\r\n    head: 1,\r\n    body: 1,\r\n    arms: 1,\r\n    legs: 1,\r\n    color: '#4fc3f7',\r\n  });\r\n\r\n  const updatePart = (part: keyof RobotParts) => {\r\n    if (typeof robotParts[part] === 'number') {\r\n      setRobotParts(prev => ({\r\n        ...prev,\r\n        [part]: (prev[part] as number % 3) + 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const [completedModules, setCompletedModules] = useState(0);\r\n\r\n  return (\r\n    <Container>\r\n      <MainPanel>\r\n        <Header>\r\n          <h1>ROBO-BEERTENDER GARAGE</h1>\r\n        </Header>\r\n\r\n        <RobotCanvas color={robotParts.color}>\r\n          <ToolsDecoration />\r\n          <LightBulbs>\r\n            <div className=\"bulb\" />\r\n            <div className=\"bulb\" />\r\n            <div className=\"bulb\" />\r\n          </LightBulbs>\r\n          <Robot3D parts={robotParts} />\r\n        </RobotCanvas>\r\n\r\n        <ControlPanel>\r\n          <Button onClick={() => updatePart('head')}>HEAD MODULE</Button>\r\n          <Button onClick={() => updatePart('body')}>CORE MODULE</Button>\r\n          <Button onClick={() => updatePart('arms')}>ARM SERVOS</Button>\r\n          <Button onClick={() => updatePart('legs')}>LEG PISTONS</Button>\r\n        </ControlPanel>\r\n\r\n        <ColorPicker\r\n          type=\"color\"\r\n          value={robotParts.color}\r\n          onChange={(e) => setRobotParts(prev => ({ ...prev, color: e.target.value }))}\r\n        />\r\n\r\n        <Button onClick={() => {\r\n          const randomPart = () => Math.floor(Math.random() * 3) + 1;\r\n          setRobotParts({\r\n            head: randomPart(),\r\n            body: randomPart(),\r\n            arms: randomPart(),\r\n            legs: randomPart(),\r\n            color: `#${Math.floor(Math.random()*16777215).toString(16)}`,\r\n          });\r\n        }}>\r\n          RANDOMIZE CONFIGURATION\r\n        </Button>\r\n\r\n        <ModuleStatus>\r\n          {completedModules} / 7 MODULES COMPLETED\r\n        </ModuleStatus>\r\n      </MainPanel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}